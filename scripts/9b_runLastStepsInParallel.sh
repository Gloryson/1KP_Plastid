#!/bin/bash
#PBS -N Parse
#PBS -M magitz@ufl.edu
#PBS -m ae 
#PBS -o $my_dir/out/Parse_out.$PBS_JOBID.o
#PBS -e $my_dir/out/Parse_error.$PBS_JOBID.err
#PBS -l walltime=48:00:00
#PBS -l pmem=2gb
#PBS -l nodes=1:ppn=8

cd $PBS_O_WORKDIR
mkdir $my_dir/out/

###########################################################
# Values that need to be passed in:
#	CLADE
#	GENE
#	ref_path
#	my_dir
#	my_final_dir


###########################################################
# Set some manually configured values here
###########################################################


# Path to the reference dataset to be used. Should have .faa files here and .fna files in nucleotide/
full_dataset_ref_path=$ref_path


#Concatenated file of all the scaffold stats:
stats_file=All.scaffold-stats.141229.txt

#Assembly path
Assemblies=$CLADE/Assemblies

###########################################################

#Print the date and set a date stamp	
date
date_stamp=`date "+%y%m%d"`

echo "Working on $GENE in $CLADE"

#Load needed modules for things called directly from here.
module load perl
module load mafft
module load python


###########################################################
# Step 9: Run mafft to align pulled data to references
# Then compute the consensus to get one sequence for each gene for a taxon.
###########################################################
if [[ -e $my_final_dir/$GENE ]] # we've already processed this gene
then 
	echo "Skipping $GENE, already done with results in $my_final_dir/$GENE "
else
	echo  -n "Working on gene $GENE: " #Print gene to log without newline (-n)

	mkdir -p $my_dir/mafft/$GENE
	mkdir -p $my_final_dir/$GENE

	if [[ ! -s $full_dataset_ref_path/nucleotide/$GENE.fna ]] #Exit if reference sequence file zero length
	then
		echo "No reference sequences found at: $full_dataset_ref_path/nucleotide/$GENE.fna. Stopping."
		exit -1
	fi
	
	#Count how many sequences are in the reference allignment for the gene--used in step 9. 
	ref_seqs=`grep -c \>  $full_dataset_ref_path/nucleotide/$GENE.fna`
	
	for i in $my_dir/Genewise/$GENE/*.out # For each taxon file in the $GENE directory, run mafft to get alignement
	do
		if [ -e "$i" ]  # if there's nothing there, i will equal "$my_dir/Genewise/$GENE/*.out" and useless files are made. 
			then
				code_genename=`basename $i .out`
				
				echo -n "." #add some dots to same line as GENE above for each mafft run.
				#Uses the nucleotide alignment file generated by prep_partitions_for_blast.sh
				mafft-linsi --thread $PBS_NUM_PPN --add $i  $full_dataset_ref_path/nucleotide/$GENE.fna > $my_dir/mafft/$GENE/$code_genename.mafft.out
				
			 
				perl scripts/Remove_1st_n_seqs.pl $ref_seqs $my_dir/mafft/$GENE/$code_genename.mafft.out $my_dir/mafft/$GENE/$code_genename.mafft.noref.out 
				if [[ $? -ne 0 ]]					#Exit if step 9 returns error code.
				then
					echo "Step 9, Remove_1st_n_seqs.pl, failed (code=$?). Stopping."
					exit -1
				fi

				perl scripts/compute_consensus_from_mafft.pl $my_dir/mafft/$GENE/$code_genename.mafft.noref.out $my_final_dir/$GENE/$code_genename.$GENE.fa
				if [[ $? -ne 0 ]]					#Exit if step 9 returns error code.
				then
					echo "Step 9, compute_consensus_from_mafft.pl failed (code=$?) while working on $GENE for $code_genename. Stopping."
					exit -1
				fi

			else
				echo "No data for $GENE, removing directories"
				rm -r $my_dir/mafft/$GENE
				rm -r $my_final_dir/$GENE
		fi
	done
	echo "Done with $GENE."
fi


###########################################################
# Step 11: Finalizing all the output.
# Rarely a need to start here, so just keeping it in the same loop at stop 9 for convenience.
###########################################################

#Create the clade_code_list based on the samples in the Assemblies folder.
#This is a list of all the 4-letter codes of samples in this clade.
#Modify path of assemblies if they are not in $CLADE/Assemblies.
ls $Assemblies | cut -f1 -d"-" > $CLADE/clade_code_list.$date_stamp

#For each gene, run the finalize script.
echo Running finalize on gene $GENE
python scripts/finalize.py -i 1kp_taxon_list_full.150101.txt  -g $my_final_dir/$GENE -f $CLADE/clade_code_list  
if [[ $? -ne 0 ]]					#Exit if step 9 returns error code.
then
	echo "Step 11, finalize.py , failed (code=$?). Stopping."
	exit -1
fi

mafft-linsi --thread $PBS_NUM_PPN --add $my_final_dir/results/$GENE.fna  $full_dataset_ref_path/nucleotide/$GENE.fna > $my_final_dir/results/$GENE.mafft.fna


echo Done.
date
